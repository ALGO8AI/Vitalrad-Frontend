{"version":3,"sources":["views/LoginPage/LoginPage.jsx","views/LoginPage/index.js"],"names":["LoginPage","props","handleChange","e","target","name","value","setState","handleSubmit","preventDefault","submitted","state","username","password","login","_","has","location","pathname","logout","loggingIn","this","className","alt","src","logo","id","onSubmit","type","placeholder","onChange","autocomple","React","Component","connect","authentication","dispatch","userActions"],"mappings":"kQAsBaA,EAAb,YACE,WAAYC,GAAe,IAAD,8BACxB,4CAAMA,KAiBRC,aAAe,SAACC,GAAY,IAAD,EACHA,EAAEC,OAAjBC,EADkB,EAClBA,KAAMC,EADY,EACZA,MACb,EAAKC,SAAL,eAAgBF,EAAOC,KApBC,EAuB1BE,aAAe,SAACL,GACdA,EAAEM,iBAEF,EAAKF,SAAS,CAACG,WAAW,IAHD,MAII,EAAKC,MAA3BC,EAJkB,EAIlBA,SAAUC,EAJQ,EAIRA,SACbD,GAAYC,GACd,EAAKZ,MAAMa,MAAMF,EAAUC,IAzB3B,EAAKZ,OACLc,IAAEC,IAAI,EAAKf,MAAO,sBACe,YAAjC,EAAKA,MAAMgB,SAASC,UAGpB,EAAKjB,MAAMkB,SAEb,EAAKR,MAAQ,CACXC,SAAU,GACVC,SAAU,GACVH,WAAW,GAdW,EAD5B,sEAkCY,IAAD,OACAU,EAAaC,KAAKpB,MAAlBmB,UADA,EAEiCC,KAAKV,MAAtCC,EAFA,EAEAA,SAAUC,EAFV,EAEUA,SAAUH,EAFpB,EAEoBA,UAC3B,OACE,yBAAKY,UAAU,uDACb,yBAAKA,UAAU,kDACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,iCACb,yBAAKA,UAAU,cACb,yBAAKC,IAAI,QAAQC,IAAKC,OAExB,2CACA,wBAAIH,UAAU,qBAAd,wBACA,0BAAMA,UAAU,OAAOI,GAAG,YAAYrB,KAAK,OAAOsB,SAAU,SAAAxB,GAAC,OAAI,EAAKK,aAAaL,KACjF,yBAAKmB,UAAW,cAAgBZ,IAAcE,EAAW,aAAe,KACtE,2BACEgB,KAAK,OACLC,YAAY,YACZP,UAAU,eACVjB,KAAK,WACLC,MAAOM,EACPkB,SAAU,SAAA3B,GAAC,OAAI,EAAKD,aAAaC,MAElCO,IAAcE,GACb,yBAAKU,UAAU,cAAf,yBAGJ,yBAAKA,UAAW,cAAgBZ,IAAcG,EAAW,aAAe,KACtE,2BACEe,KAAK,WACLC,YAAY,WACZP,UAAU,eACVjB,KAAK,WACLC,MAAOO,EACPkB,WAAW,mBACXD,SAAU,SAAA3B,GAAC,OAAI,EAAKD,aAAaC,MAElCO,IAAcG,GACb,yBAAKS,UAAU,cAAf,yBAGJ,yBAAKA,UAAU,QACb,4BAAQA,UAAU,mBAAlB,SACGF,GAAa,yBAAKE,UAAU,sBA9EnD,GAA+BU,IAAMC,WAuGtBC,eAbS,SAAAvB,GAAK,MAAK,CAChCS,UAAWT,EAAMwB,eAAef,YAAa,MAGpB,SAAAgB,GAAQ,MAAK,CACtCtB,MAAO,SAACF,EAAUC,GAChBuB,EAASC,IAAYvB,MAAMF,EAAUC,KAEvCM,OAAQ,WACNiB,EAASC,IAAYlB,cAIVe,CAGblC,GChIF","file":"static/js/4.c8a061f0.chunk.js","sourcesContent":["// @flow week\nimport React from 'react'\nimport {connect} from 'react-redux'\nimport './login.css'\nimport {userActions} from '../../_actions'\nimport _ from 'lodash'\nimport logo from '../../img/logo.jpg'\ntype State = {\n  username: string,\n  password: string,\n  submitted: boolean,\n}\n\ntype Props = {\n  location: {pathname: string},\n  history: any,\n  dispatch: any,\n  loggingIn?: boolean,\n  logout: Function,\n  login: Function,\n};\n\nexport class LoginPage extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    if (\n      this.props &&\n      _.has(this.props, 'location.pathname') &&\n      this.props.location.pathname === '/logout'\n    ) {\n      // reset login status\n      this.props.logout()\n    }\n    this.state = {\n      username: '',\n      password: '',\n      submitted: false,\n    }\n  }\n\n  handleChange = (e: any) => {\n    const {name, value} = e.target\n    this.setState({[name]: value})\n  }\n\n  handleSubmit = (e: any) => {\n    e.preventDefault()\n\n    this.setState({submitted: true})\n    const {username, password} = this.state\n    if (username && password) {\n      this.props.login(username, password)\n    }\n  }\n\n  render() {\n    const {loggingIn} = this.props\n    const {username, password, submitted} = this.state\n    return (\n      <div className=\"container-fluid page-body-wrapper full-page-wrapper\">\n        <div className=\"content-wrapper d-flex align-items-center auth\">\n          <div className=\"row flex-grow\">\n            <div className=\"col-lg-4 mx-auto\">\n              <div className=\"auth-form-light text-left p-5\">\n                <div className=\"brand-logo\">\n                  <img alt=\"Radio\" src={logo} />\n                </div>\n                <h4>Admin-Panel</h4>\n                <h6 className=\"font-weight-light\">Sign in to continue.</h6>\n                <form className=\"pt-3\" id=\"loginForm\" name=\"form\" onSubmit={e => this.handleSubmit(e)}>\n                  <div className={'form-group' + (submitted && !username ? ' has-error' : '')}>\n                    <input\n                      type=\"text\"\n                      placeholder=\"User Name\"\n                      className=\"form-control\"\n                      name=\"username\"\n                      value={username}\n                      onChange={e => this.handleChange(e)}\n                    />\n                    {submitted && !username && (\n                      <div className=\"help-block\">Username is required</div>\n                    )}\n                  </div>\n                  <div className={'form-group' + (submitted && !password ? ' has-error' : '')}>\n                    <input\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      className=\"form-control\"\n                      name=\"password\"\n                      value={password}\n                      autocomple=\"current-password\"\n                      onChange={e => this.handleChange(e)}\n                    />\n                    {submitted && !password && (\n                      <div className=\"help-block\">Password is required</div>\n                    )}\n                  </div>\n                  <div className=\"mt-3\">\n                    <button className=\"btn btn-primary\">Login</button>\n                      {loggingIn && <div className=\"loader\"></div>}\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  loggingIn: state.authentication.loggingIn || false,\n})\n\nconst mapDispatchToProps = dispatch => ({\n  login: (username, password) => {\n    dispatch(userActions.login(username, password))\n  },\n  logout: () => {\n    dispatch(userActions.logout())\n  },\n})\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginPage)\n","export {default} from './LoginPage'\n"],"sourceRoot":""}